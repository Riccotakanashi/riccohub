local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25) local v26={};for v41=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v41,v41 + 1 )),v1(v2(v25,1 + (v41% #v25) ,1 + (v41% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function() return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...) local v29=1;local v30;v27=v12(v11(v27,5),v7("\255\20","\214\209\58\46"),function(v42) if (v9(v42,2)==81) then local v101=0;while true do if (v101==0) then v30=v8(v11(v42,1,1));return "";end end else local v102=v10(v8(v42,16));if v30 then local v108=v13(v102,v30);v30=nil;return v108;else return v102;end end end);local function v31(v43,v44,v45) if v45 then local v103=(v43/(2^(v44-1)))%(2^(((v45-1) -(v44-1)) + 1)) ;return v103-(v103%1) ;else local v104=0;local v105;while true do if (v104==0) then v105=2^(v44-(2 -1)) ;return (((v43%(v105 + v105))>=v105) and 1) or 0 ;end end end end local function v32() local v46=v9(v27,v29,v29);v29=v29 + 1 ;return v46;end local function v33() local v47,v48=v9(v27,v29,v29 + (5 -3) );v29=v29 + 2 ;return (v48 * 256) + v47 ;end local function v34() local v49=0;local v50;local v51;local v52;local v53;while true do if (v49==0) then v50,v51,v52,v53=v9(v27,v29,v29 + 3 );v29=v29 + 4 ;v49=1;end if (v49==1) then return (v53 * 16777216) + (v52 * 65536) + (v51 * 256) + v50 ;end end end local function v35() local v54=0;local v55;local v56;local v57;local v58;local v59;local v60;while true do if (v54==2) then v59=v31(v56,21,31);v60=((v31(v56,32)==(569 -(367 + 201))) and  -(928 -(214 + 713))) or 1 ;v54=3;end if (v54==1) then v57=1;v58=(v31(v56,1 -0 ,51 -31 ) * ((621 -(555 + 64))^(963 -(857 + 74)))) + v55 ;v54=2;end if (v54==0) then v55=v34();v56=v34();v54=1;end if (v54==3) then if (v59==0) then if (v58==(0 + 0)) then return v60 * 0 ;else v59=1;v57=0;end elseif (v59==2047) then return ((v58==0) and (v60 * (1/0))) or (v60 * NaN) ;end return v16(v60,v59-1023 ) * (v57 + (v58/(2^52))) ;end end end local function v36(v61) local v62=0;local v63;local v64;while true do if (v62==2) then v64={};for v109=1, #v63 do v64[v109]=v10(v9(v11(v63,v109,v109)));end v62=3;end if (v62==0) then v63=nil;if  not v61 then v61=v34();if (v61==0) then return "";end end v62=1;end if (v62==1) then v63=v11(v27,v29,(v29 + v61) -1 );v29=v29 + v61 ;v62=2;end if (3==v62) then return v14(v64);end end end local v37=v34;local function v38(...) return {...},v20("#",...);end local function v39() local v65={};local v66={};local v67={};local v68={v65,v66,nil,v67};local v69=v34();local v70={};for v78=1 + 0 ,v69 do local v79=0;local v80;local v81;while true do if (0==v79) then v80=v32();v81=nil;v79=1;end if (1==v79) then if (v80==1) then v81=v32()~=0 ;elseif (v80==2) then v81=v35();elseif (v80==3) then v81=v36();end v70[v78]=v81;break;end end end v68[3]=v32();for v82=878 -(282 + 595) ,v34() do local v83=0;local v84;while true do if (v83==0) then v84=v32();if (v31(v84,1,1)==(1637 -(1523 + 114))) then local v118=0;local v119;local v120;local v121;while true do if (3==v118) then if (v31(v120,3,3)==(1271 -(226 + 1044))) then v121[4]=v70[v121[4]];end v65[v82]=v121;break;end if (v118==2) then if (v31(v120,1,1)==1) then v121[2]=v70[v121[2]];end if (v31(v120,2,2)==(1 -0)) then v121[1068 -(68 + 997) ]=v70[v121[3]];end v118=3;end if (v118==1) then v121={v33(),v33(),nil,nil};if (v119==0) then v121[3]=v33();v121[4]=v33();elseif (v119==1) then v121[3]=v34();elseif (v119==2) then v121[3]=v34() -(2^16) ;elseif (v119==3) then local v133=0;while true do if (0==v133) then v121[3]=v34() -(2^16) ;v121[4]=v33();break;end end end v118=2;end if (v118==0) then v119=v31(v84,2,3 + 0 );v120=v31(v84,4,6);v118=1;end end end break;end end end for v85=1,v34() do v66[v85-1 ]=v39();end return v68;end local function v40(v72,v73,v74) local v75=v72[1];local v76=v72[2];local v77=v72[3];return function(...) local v87=v75;local v88=v76;local v89=v77;local v90=v38;local v91=1;local v92= -1;local v93={};local v94={...};local v95=v20("#",...) -1 ;local v96={};local v97={};for v106=0,v95 do if (v106>=v89) then v93[v106-v89 ]=v94[v106 + 1 ];else v97[v106]=v94[v106 + 1 ];end end local v98=(v95-v89) + (4 -3) ;local v99;local v100;while true do local v107=0;while true do if (v107==1) then if (v100<=41) then if (v100<=20) then if (v100<=9) then if (v100<=(121 -(32 + 85))) then if (v100<=1) then if (v100==(0 + 0)) then local v134=0;local v135;while true do if (v134==0) then v135=v99[2];v97[v135](v21(v97,v135 + 1 + 0 ,v92));break;end end elseif  not v97[v99[2]] then v91=v91 + 1 ;else v91=v99[3];end elseif (v100<=2) then local v136=v99[2];local v137,v138=v90(v97[v136](v97[v136 + 1 ]));v92=(v138 + v136) -1 ;local v139=957 -(892 + 65) ;for v213=v136,v92 do v139=v139 + 1 ;v97[v213]=v137[v139];end elseif (v100==3) then v97[v99[2]]=v99[3];else local v225=0;local v226;while true do if (v225==0) then v226=v99[2];v97[v226](v97[v226 + 1 ]);break;end end end elseif (v100<=(14 -8)) then if (v100==(9 -4)) then local v140=v99[2];local v141,v142=v90(v97[v140](v21(v97,v140 + 1 ,v92)));v92=(v142 + v140) -1 ;local v143=0;for v216=v140,v92 do local v217=0;while true do if (v217==0) then v143=v143 + 1 ;v97[v216]=v141[v143];break;end end end else local v144=v99[2];local v145,v146=v90(v97[v144](v21(v97,v144 + 1 ,v99[3])));v92=(v146 + v144) -1 ;local v147=0;for v218=v144,v92 do local v219=0;while true do if (v219==0) then v147=v147 + 1 ;v97[v218]=v145[v147];break;end end end end elseif (v100<=7) then do return;end elseif (v100==(14 -6)) then local v227=0;local v228;while true do if (v227==0) then v228=v99[2];v97[v228]=v97[v228](v21(v97,v228 + 1 ,v99[3]));break;end end else local v229=v88[v99[3]];local v230;local v231={};v230=v18({},{[v7("\151\206\185\75\200\52\176","\81\200\145\208\37\172")]=function(v306,v307) local v308=0;local v309;while true do if (v308==0) then v309=v231[v307];return v309[1][v309[2]];end end end,[v7("\179\15\162\172\60\133\62\168\172\51","\75\236\80\204\201")]=function(v310,v311,v312) local v313=0;local v314;while true do if (v313==0) then v314=v231[v311];v314[1][v314[2]]=v312;break;end end end});for v315=1,v99[4] do v91=v91 + 1 ;local v316=v87[v91];if (v316[1]==18) then v231[v315-1 ]={v97,v316[3]};else v231[v315-1 ]={v73,v316[3]};end v96[ #v96 + 1 ]=v231;end v97[v99[2]]=v40(v229,v230,v74);end elseif (v100<=14) then if (v100<=11) then if (v100>10) then v97[v99[2]]=v99[3];else v97[v99[2]]= #v97[v99[3]];end elseif (v100<=12) then v97[v99[2]]={};elseif (v100>13) then v97[v99[2]]={};else local v234=v99[2];do return v21(v97,v234,v92);end end elseif (v100<=17) then if (v100<=15) then v97[v99[2]][v97[v99[3]]]=v99[4];elseif (v100==16) then local v235=0;local v236;while true do if (0==v235) then v236=v99[2];v97[v236](v21(v97,v236 + 1 ,v99[3]));break;end end else do return;end end elseif (v100<=(368 -(87 + 263))) then v97[v99[2]]=v97[v99[3]];elseif (v100>(199 -(67 + 113))) then local v237=0;local v238;local v239;local v240;while true do if (v237==1) then v240=v99[3];for v374=1,v240 do v239[v374]=v97[v238 + v374 ];end break;end if (v237==0) then v238=v99[2];v239=v97[v238];v237=1;end end else local v241=v99[2 + 0 ];local v242=v97[v241 + 2 ];local v243=v97[v241] + v242 ;v97[v241]=v243;if (v242>0) then if (v243<=v97[v241 + 1 ]) then local v377=0;while true do if (v377==0) then v91=v99[3];v97[v241 + 3 ]=v243;break;end end end elseif (v243>=v97[v241 + 1 ]) then local v378=0;while true do if (v378==0) then v91=v99[3];v97[v241 + 3 ]=v243;break;end end end end elseif (v100<=30) then if (v100<=(61 -36)) then if (v100<=22) then if (v100==(16 + 5)) then v97[v99[2]][v97[v99[3]]]=v97[v99[15 -11 ]];else v74[v99[3]]=v97[v99[2]];end elseif (v100<=23) then v97[v99[2]][v99[3]]=v97[v99[4]];elseif (v100>24) then v97[v99[2]]=v97[v99[3]];else local v247=v99[2];local v248=v97[v99[955 -(802 + 150) ]];v97[v247 + 1 ]=v248;v97[v247]=v248[v99[4]];end elseif (v100<=27) then if (v100>26) then v97[v99[2]]=v74[v99[3]];else local v164=v99[2];v97[v164](v97[v164 + (2 -1) ]);end elseif (v100<=28) then local v165=0;local v166;while true do if (v165==0) then v166=v99[2];v97[v166]=v97[v166]();break;end end elseif (v100==29) then local v252=v99[2];local v253=v97[v252];local v254=v99[5 -2 ];for v320=1 + 0 ,v254 do v253[v320]=v97[v252 + v320 ];end else for v323=v99[999 -(915 + 82) ],v99[3] do v97[v323]=nil;end end elseif (v100<=35) then if (v100<=32) then if (v100==31) then v97[v99[2]]=v97[v99[8 -5 ]]%v99[4] ;else v97[v99[2]]=v74[v99[3]];end elseif (v100<=33) then v97[v99[2]][v99[3]]=v99[4];elseif (v100==(20 + 14)) then local v255=0;local v256;local v257;local v258;while true do if (v255==1) then v258=v97[v256 + 2 ];if (v258>0) then if (v257>v97[v256 + 1 ]) then v91=v99[3];else v97[v256 + 3 ]=v257;end elseif (v257<v97[v256 + 1 ]) then v91=v99[3];else v97[v256 + (3 -0) ]=v257;end break;end if (v255==0) then v256=v99[2];v257=v97[v256];v255=1;end end else do return v97[v99[2]]();end end elseif (v100<=38) then if (v100<=36) then v97[v99[2]]=v97[v99[3]][v99[4]];elseif (v100>37) then local v259=0;local v260;while true do if (v259==0) then v260=v99[2];do return v97[v260](v21(v97,v260 + 1 ,v99[1190 -(1069 + 118) ]));end break;end end else v97[v99[2]]();end elseif (v100<=39) then v97[v99[2]][v97[v99[3]]]=v97[v99[4]];elseif (v100>40) then local v261=v99[2];local v262=v97[v261];local v263=v97[v261 + 2 ];if (v263>(0 -0)) then if (v262>v97[v261 + (1 -0) ]) then v91=v99[3];else v97[v261 + 3 ]=v262;end elseif (v262<v97[v261 + 1 ]) then v91=v99[3];else v97[v261 + 1 + 2 ]=v262;end else v97[v99[2]]=v73[v99[3]];end elseif (v100<=62) then if (v100<=51) then if (v100<=46) then if (v100<=(75 -32)) then if (v100==42) then v97[v99[2]]=v99[3] + v97[v99[4]] ;else local v177=v99[2];local v178=v97[v177];for v220=v177 + 1 ,v92 do v15(v178,v97[v220]);end end elseif (v100<=44) then local v179=0;local v180;local v181;local v182;local v183;while true do if (0==v179) then v180=v99[2];v181,v182=v90(v97[v180](v21(v97,v180 + 1 + 0 ,v99[3])));v179=1;end if (2==v179) then for v342=v180,v92 do v183=v183 + 1 ;v97[v342]=v181[v183];end break;end if (v179==1) then v92=(v182 + v180) -1 ;v183=0;v179=2;end end elseif (v100>45) then local v266=0;local v267;local v268;local v269;local v270;while true do if (v266==1) then v92=(v269 + v267) -1 ;v270=0;v266=2;end if (v266==2) then for v383=v267,v92 do local v384=0;while true do if (v384==0) then v270=v270 + 1 ;v97[v383]=v268[v270];break;end end end break;end if (v266==0) then v267=v99[2];v268,v269=v90(v97[v267](v21(v97,v267 + 1 ,v92)));v266=1;end end else local v271=0;local v272;local v273;local v274;while true do if (1==v271) then v274={};v273=v18({},{[v7("\180\77\72\121\129\251\107","\143\235\18\33\23\229\158\19")]=function(v385,v386) local v387=0;local v388;while true do if (v387==0) then v388=v274[v386];return v388[792 -(368 + 423) ][v388[2]];end end end,[v7("\133\254\213\229\243\120\114\84\191\217","\48\218\161\187\128\132\17\28")]=function(v389,v390,v391) local v392=0;local v393;while true do if (v392==0) then v393=v274[v390];v393[1][v393[2]]=v391;break;end end end});v271=2;end if (v271==2) then for v394=1,v99[4] do local v395=0;local v396;while true do if (v395==1) then if (v396[1]==(56 -38)) then v274[v394-1 ]={v97,v396[3]};else v274[v394-1 ]={v73,v396[3]};end v96[ #v96 + (3 -2) ]=v274;break;end if (v395==0) then v91=v91 + 1 ;v396=v87[v91];v395=1;end end end v97[v99[2]]=v40(v272,v273,v74);break;end if (v271==0) then v272=v88[v99[3]];v273=nil;v271=1;end end end elseif (v100<=48) then if (v100>47) then v97[v99[2]]=v99[3] + v97[v99[446 -(416 + 26) ]] ;else v97[v99[2]]=v97[v99[3]] + v99[4] ;end elseif (v100<=49) then v97[v99[2]]=v97[v99[3]]%v97[v99[4]] ;elseif (v100==50) then v97[v99[2]]=v97[v99[9 -6 ]] + v99[2 + 2 ] ;else v91=v99[3];end elseif (v100<=56) then if (v100<=53) then if (v100==52) then v91=v99[3];else v97[v99[3 -1 ]]=v97[v99[3]]%v97[v99[4]] ;end elseif (v100<=54) then local v189=0;local v190;local v191;local v192;local v193;while true do if (v189==1) then v92=(v192 + v190) -1 ;v193=0;v189=2;end if (v189==0) then v190=v99[2];v191,v192=v90(v97[v190](v97[v190 + 1 ]));v189=1;end if (v189==2) then for v345=v190,v92 do local v346=0;while true do if (v346==0) then v193=v193 + 1 ;v97[v345]=v191[v193];break;end end end break;end end elseif (v100==55) then v97[v99[2]][v97[v99[3]]]=v99[4];elseif v97[v99[2]] then v91=v91 + 1 ;else v91=v99[3];end elseif (v100<=59) then if (v100<=57) then local v194=v99[2];local v195=v97[v194];for v221=v194 + 1 ,v92 do v15(v195,v97[v221]);end elseif (v100>58) then local v279=v99[2];v97[v279](v21(v97,v279 + 1 ,v99[3]));else for v327=v99[2],v99[3] do v97[v327]=nil;end end elseif (v100<=60) then v97[v99[2]]=v97[v99[3]]%v99[4] ;elseif (v100>61) then v97[v99[2]][v99[3]]=v97[v99[4]];elseif (v97[v99[2]]==v99[4]) then v91=v91 + 1 ;else v91=v99[3];end elseif (v100<=(511 -(145 + 293))) then if (v100<=67) then if (v100<=(494 -(44 + 386))) then if (v100==63) then local v197=0;local v198;local v199;local v200;while true do if (2==v197) then if (v199>(1486 -(998 + 488))) then if (v200<=v97[v198 + 1 ]) then v91=v99[3];v97[v198 + 3 ]=v200;end elseif (v200>=v97[v198 + 1 ]) then v91=v99[3];v97[v198 + 3 ]=v200;end break;end if (v197==0) then v198=v99[2];v199=v97[v198 + 2 ];v197=1;end if (1==v197) then v200=v97[v198] + v199 ;v97[v198]=v200;v197=2;end end elseif  not v97[v99[1 + 1 ]] then v91=v91 + 1 ;else v91=v99[3];end elseif (v100<=65) then local v201=0;local v202;while true do if (v201==0) then v202=v99[2];v97[v202]=v97[v202](v97[v202 + 1 ]);break;end end elseif (v100>(55 + 11)) then local v283=0;local v284;while true do if (v283==0) then v284=v99[774 -(201 + 571) ];v97[v284]=v97[v284]();break;end end else local v285=v99[2];v97[v285]=v97[v285](v21(v97,v285 + 1 ,v99[3]));end elseif (v100<=70) then if (v100<=68) then v97[v99[2]]= #v97[v99[3]];elseif (v100==69) then local v287=v99[2];local v288=v97[v99[3]];v97[v287 + (1139 -(116 + 1022)) ]=v288;v97[v287]=v288[v99[4]];else local v292=v99[2];do return v21(v97,v292,v92);end end elseif (v100<=71) then local v204=0;local v205;while true do if (v204==0) then v205=v99[2];v97[v205]=v97[v205](v97[v205 + (4 -3) ]);break;end end elseif (v100==72) then local v293=0;local v294;while true do if (v293==0) then v294=v99[2];v97[v294]=v97[v294](v21(v97,v294 + 1 ,v92));break;end end else v97[v99[2 + 0 ]]=v73[v99[3]];end elseif (v100<=78) then if (v100<=75) then if (v100==74) then local v206=v99[2];v97[v206]=v97[v206](v21(v97,v206 + (3 -2) ,v92));else v74[v99[3]]=v97[v99[7 -5 ]];end elseif (v100<=76) then local v210=v99[861 -(814 + 45) ];do return v97[v210](v21(v97,v210 + 1 ,v99[3]));end elseif (v100>(189 -112)) then local v297=v99[2];local v298=v97[v297];for v336=v297 + 1 ,v99[3] do v15(v298,v97[v336]);end else v97[v99[2]]=v97[v99[3]][v99[4]];end elseif (v100<=81) then if (v100<=79) then do return v97[v99[2]]();end elseif (v100==80) then if (v97[v99[2]]==v99[4]) then v91=v91 + 1 + 0 ;else v91=v99[3];end elseif v97[v99[2]] then v91=v91 + 1 ;else v91=v99[3];end elseif (v100<=82) then local v211=0;local v212;while true do if (0==v211) then v212=v99[2];v97[v212](v21(v97,v212 + 1 ,v92));break;end end elseif (v100==(30 + 53)) then v97[v99[2]]();else v97[v99[2]][v99[3]]=v99[4];end v91=v91 + 1 ;break;end if (v107==0) then v99=v87[v91];v100=v99[1];v107=1;end end end end;end return v40(v39(),{},v28)(...);end return vv17(),...);
