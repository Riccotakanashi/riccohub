local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25) local v26={};for v41=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v41,v41 + 1 )),v1(v2(v25,1 + (v41% #v25) ,1 + (v41% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function() return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...) local v29=1;local v30;v27=v12(v11(v27,5),v7("\26\248","\218\52\214\209"),function(v42) if (v9(v42,2)==81) then local v102=0;while true do if (v102==0) then v30=v8(v11(v42,2 -1 ,1));return "";end end else local v103=0;local v104;while true do if (v103==0) then v104=v10(v8(v42,16));if v30 then local v122=v13(v104,v30);v30=nil;return v122;else return v104;end break;end end end end);local function v31(v43,v44,v45) if v45 then local v105=(v43/(2^(v44-1)))%(2^(((v45-1) -(v44-(2 -1))) + 1)) ;return v105-(v105%1) ;else local v106=2^(v44-1) ;return (((v43%(v106 + v106))>=v106) and 1) or 0 ;end end local function v32() local v46=0;local v47;while true do if (0==v46) then v47=v9(v27,v29,v29);v29=v29 + (1 -0) ;v46=1;end if (1==v46) then return v47;end end end local function v33() local v48=0;local v49;local v50;while true do if (v48==1) then return (v50 * (659 -403)) + v49 ;end if (v48==0) then v49,v50=v9(v27,v29,v29 + 2 );v29=v29 + 2 ;v48=1;end end end local function v34() local v51=0;local v52;local v53;local v54;local v55;while true do if (v51==1) then return (v55 * 16777216) + (v54 * 65536) + (v53 * 256) + v52 ;end if (v51==0) then v52,v53,v54,v55=v9(v27,v29,v29 + 3 );v29=v29 + (623 -(555 + 64)) ;v51=1;end end end local function v35() local v56=v34();local v57=v34();local v58=1;local v59=(v31(v57,1,20) * (2^32)) + v56 ;local v60=v31(v57,21,31);local v61=((v31(v57,32)==1) and  -1) or 1 ;if (v60==0) then if (v59==0) then return v61 * 0 ;else local v110=0;while true do if (v110==0) then v60=1;v58=0;break;end end end elseif (v60==2047) then return ((v59==0) and (v61 * (1/0))) or (v61 * NaN) ;end return v16(v61,v60-1023 ) * (v58 + (v59/(2^52))) ;end local function v36(v62) local v63=0;local v64;local v65;while true do if (v63==2) then v65={};for v111=1, #v64 do v65[v111]=v10(v9(v11(v64,v111,v111)));end v63=3;end if (1==v63) then v64=v11(v27,v29,(v29 + v62) -1 );v29=v29 + v62 ;v63=2;end if (v63==3) then return v14(v65);end if (v63==0) then v64=nil;if  not v62 then local v117=0;while true do if (0==v117) then v62=v34();if (v62==0) then return "";end break;end end end v63=1;end end end local v37=v34;local function v38(...) return {...},v20("#",...);end local function v39() local v66={};local v67={};local v68={};local v69={v66,v67,nil,v68};local v70=v34();local v71={};for v79=1,v70 do local v80=v32();local v81;if (v80==1) then v81=v32()~=0 ;elseif (v80==2) then v81=v35();elseif (v80==3) then v81=v36();end v71[v79]=v81;end v69[3]=v32();for v83=569 -(367 + 201) ,v34() do local v84=0;local v85;while true do if (v84==0) then v85=v32();if (v31(v85,1,1)==(927 -(214 + 713))) then local v118=0;local v119;local v120;local v121;while true do if (v118==1) then v121={v33(),v33(),nil,nil};if (v119==0) then local v124=0;while true do if (v124==0) then v121[3]=v33();v121[4]=v33();break;end end elseif (v119==1) then v121[1 + 2 ]=v34();elseif (v119==2) then v121[3]=v34() -(2^16) ;elseif (v119==3) then v121[3]=v34() -(2^16) ;v121[4]=v33();end v118=2;end if (0==v118) then v119=v31(v85,2,3);v120=v31(v85,4,2 + 4 );v118=1;end if (v118==3) then if (v31(v120,3,3 + 0 )==1) then v121[4]=v71[v121[4]];end v66[v83]=v121;break;end if (v118==2) then if (v31(v120,1,1)==1) then v121[2]=v71[v121[2]];end if (v31(v120,879 -(282 + 595) ,2)==1) then v121[3]=v71[v121[1640 -(1523 + 114) ]];end v118=3;end end end break;end end end for v86=1,v34() do v67[v86-1 ]=v39();end return v69;end local function v40(v73,v74,v75) local v76=v73[1];local v77=v73[2];local v78=v73[3];return function(...) local v88=v76;local v89=v77;local v90=v78;local v91=v38;local v92=1;local v93= -(1 -0);local v94={};local v95={...};local v96=v20("#",...) -(1066 -(68 + 997)) ;local v97={};local v98={};for v107=1270 -(226 + 1044) ,v96 do if (v107>=v90) then v94[v107-v90 ]=v95[v107 + 1 ];else v98[v107]=v95[v107 + 1 ];end end local v99=(v96-v90) + 1 ;local v100;local v101;while true do v100=v88[v92];v101=v100[1];if (v101<=41) then if (v101<=20) then if (v101<=9) then if (v101<=4) then if (v101<=1) then if (v101>0) then v98[v100[2]]=v100[3] + v98[v100[4]] ;else v98[v100[8 -6 ]]=v98[v100[3]]%v100[4] ;end elseif (v101<=2) then v98[v100[2]][v100[3]]=v98[v100[4]];elseif (v101==(120 -(32 + 85))) then local v214=v100[2];local v215=v98[v214 + 2 ];local v216=v98[v214] + v215 ;v98[v214]=v216;if (v215>0) then if (v216<=v98[v214 + 1 ]) then local v375=0;while true do if (v375==0) then v92=v100[3];v98[v214 + 3 ]=v216;break;end end end elseif (v216>=v98[v214 + 1 ]) then local v376=0;while true do if (v376==0) then v92=v100[3];v98[v214 + 3 ]=v216;break;end end end elseif (v98[v100[2]]==v100[4]) then v92=v92 + 1 ;else v92=v100[3];end elseif (v101<=6) then if (v101==(5 + 0)) then v98[v100[2]]=v98[v100[3]][v100[4]];elseif v98[v100[2]] then v92=v92 + 1 + 0 ;else v92=v100[3];end elseif (v101<=(964 -(892 + 65))) then local v140=v100[4 -2 ];v98[v140]=v98[v140]();elseif (v101==8) then for v306=v100[2],v100[3] do v98[v306]=nil;end elseif v98[v100[2]] then v92=v92 + 1 ;else v92=v100[3];end elseif (v101<=14) then if (v101<=11) then if (v101==10) then v98[v100[2]]=v98[v100[3]] + v100[4] ;else v98[v100[2]][v100[5 -2 ]]=v98[v100[4]];end elseif (v101<=12) then do return v98[v100[2]]();end elseif (v101==13) then do return;end else v98[v100[2]]=v98[v100[3]][v100[4]];end elseif (v101<=(31 -14)) then if (v101<=(365 -(87 + 263))) then local v145=v100[2];do return v98[v145](v21(v98,v145 + 1 ,v100[3]));end elseif (v101>(196 -(67 + 113))) then local v221=0;local v222;while true do if (v221==0) then v222=v100[2];v98[v222]=v98[v222]();break;end end else v75[v100[3]]=v98[v100[2 + 0 ]];end elseif (v101<=18) then local v146=0;local v147;local v148;while true do if (v146==1) then v98[v147 + 1 ]=v148;v98[v147]=v148[v100[4]];break;end if (v146==0) then v147=v100[2];v148=v98[v100[3]];v146=1;end end elseif (v101>19) then v98[v100[2]]=v74[v100[3]];else local v227=0;local v228;while true do if (v227==0) then v228=v100[4 -2 ];v98[v228]=v98[v228](v98[v228 + 1 + 0 ]);break;end end end elseif (v101<=30) then if (v101<=25) then if (v101<=22) then if (v101>21) then v98[v100[2]][v100[3]]=v100[4];else local v151=v100[2];v98[v151]=v98[v151](v21(v98,v151 + 1 ,v93));end elseif (v101<=23) then local v153=0;local v154;while true do if (v153==0) then v154=v100[2];v98[v154](v21(v98,v154 + 1 ,v93));break;end end elseif (v101==24) then local v229=0;local v230;while true do if (0==v229) then v230=v100[2];v98[v230](v98[v230 + 1 ]);break;end end else v98[v100[2]]=v100[11 -8 ];end elseif (v101<=27) then if (v101>26) then v98[v100[2]]= #v98[v100[955 -(802 + 150) ]];else v98[v100[2]]=v74[v100[3]];end elseif (v101<=28) then local v158=v100[5 -3 ];local v159,v160=v91(v98[v158](v98[v158 + 1 ]));v93=(v160 + v158) -1 ;local v161=0;for v207=v158,v93 do local v208=0;while true do if (v208==0) then v161=v161 + 1 ;v98[v207]=v159[v161];break;end end end elseif (v101==29) then do return v98[v100[3 -1 ]]();end else local v233=v100[2];local v234=v98[v233];local v235=v98[v233 + 2 ];if (v235>0) then if (v234>v98[v233 + 1 ]) then v92=v100[3];else v98[v233 + 3 ]=v234;end elseif (v234<v98[v233 + 1 ]) then v92=v100[3];else v98[v233 + 3 ]=v234;end end elseif (v101<=35) then if (v101<=32) then if (v101>31) then v92=v100[3];else v98[v100[2]]=v100[3 + 0 ] + v98[v100[4]] ;end elseif (v101<=33) then if  not v98[v100[2]] then v92=v92 + 1 ;else v92=v100[3];end elseif (v101==34) then local v237=0;local v238;local v239;local v240;local v241;while true do if (v237==0) then v238=v100[2];v239,v240=v91(v98[v238](v21(v98,v238 + 1 ,v100[3])));v237=1;end if (v237==1) then v93=(v240 + v238) -1 ;v241=0;v237=2;end if (v237==2) then for v381=v238,v93 do local v382=0;while true do if (v382==0) then v241=v241 + 1 ;v98[v381]=v239[v241];break;end end end break;end end else local v242=0;local v243;local v244;while true do if (v242==0) then v243=v100[2];v244=v98[v243];v242=1;end if (v242==1) then for v383=v243 + 1 ,v93 do v15(v244,v98[v383]);end break;end end end elseif (v101<=38) then if (v101<=36) then v98[v100[2]]();elseif (v101==37) then v98[v100[2]]={};else v98[v100[999 -(915 + 82) ]]=v98[v100[8 -5 ]]%v98[v100[4]] ;end elseif (v101<=(23 + 16)) then local v164=0;local v165;local v166;local v167;while true do if (v164==1) then v167=v98[v165 + 2 ];if (v167>0) then if (v166>v98[v165 + 1 ]) then v92=v100[3];else v98[v165 + 3 ]=v166;end elseif (v166<v98[v165 + 1 ]) then v92=v100[3];else v98[v165 + 3 ]=v166;end break;end if (v164==0) then v165=v100[2];v166=v98[v165];v164=1;end end elseif (v101==40) then v98[v100[2]][v98[v100[3]]]=v100[4];else local v249=v100[2];local v250,v251=v91(v98[v249](v98[v249 + 1 ]));v93=(v251 + v249) -1 ;local v252=0;for v317=v249,v93 do local v318=0;while true do if (v318==0) then v252=v252 + 1 ;v98[v317]=v250[v252];break;end end end end elseif (v101<=62) then if (v101<=51) then if (v101<=46) then if (v101<=43) then if (v101==42) then v98[v100[2]][v98[v100[3]]]=v100[4];else local v170=v100[2];local v171,v172=v91(v98[v170](v21(v98,v170 + (1 -0) ,v100[3])));v93=(v172 + v170) -1 ;local v173=0;for v209=v170,v93 do v173=v173 + 1 ;v98[v209]=v171[v173];end end elseif (v101<=44) then v98[v100[1189 -(1069 + 118) ]]={};elseif (v101==(101 -56)) then local v253=v100[2];local v254=v98[v253];local v255=v100[3];for v319=1,v255 do v254[v319]=v98[v253 + v319 ];end else local v256=v100[2];local v257,v258=v91(v98[v256](v21(v98,v256 + (1 -0) ,v93)));v93=(v258 + v256) -1 ;local v259=0;for v322=v256,v93 do local v323=0;while true do if (0==v323) then v259=v259 + 1 + 0 ;v98[v322]=v257[v259];break;end end end end elseif (v101<=48) then if (v101>47) then v98[v100[3 -1 ]][v100[3]]=v100[4];else local v177=0;local v178;local v179;local v180;while true do if (1==v177) then v180=v100[794 -(368 + 423) ];for v339=1,v180 do v179[v339]=v98[v178 + v339 ];end break;end if (v177==0) then v178=v100[2 + 0 ];v179=v98[v178];v177=1;end end end elseif (v101<=49) then v98[v100[2]]=v98[v100[3]];elseif (v101>50) then local v260=0;local v261;local v262;local v263;while true do if (v260==0) then v261=v100[2];v262=v98[v261 + 2 ];v260=1;end if (v260==2) then if (v262>0) then if (v263<=v98[v261 + 1 ]) then local v417=0;while true do if (v417==0) then v92=v100[3];v98[v261 + 3 ]=v263;break;end end end elseif (v263>=v98[v261 + 1 ]) then local v418=0;while true do if (v418==0) then v92=v100[3];v98[v261 + 3 ]=v263;break;end end end break;end if (v260==1) then v263=v98[v261] + v262 ;v98[v261]=v263;v260=2;end end else local v264=0;local v265;local v266;while true do if (v264==1) then for v388=v265 + 1 ,v100[3] do v15(v266,v98[v388]);end break;end if (v264==0) then v265=v100[2];v266=v98[v265];v264=1;end end end elseif (v101<=(175 -119)) then if (v101<=53) then if (v101==52) then local v183=0;local v184;while true do if (v183==0) then v184=v100[20 -(10 + 8) ];v98[v184](v98[v184 + 1 ]);break;end end else local v185=v100[2];v98[v185]=v98[v185](v21(v98,v185 + 1 ,v93));end elseif (v101<=54) then local v187=0;local v188;while true do if (v187==0) then v188=v100[2];v98[v188]=v98[v188](v98[v188 + 1 ]);break;end end elseif (v101==(211 -156)) then v75[v100[3]]=v98[v100[2]];else local v269=v100[2];do return v21(v98,v269,v93);end end elseif (v101<=(501 -(416 + 26))) then if (v101<=57) then v98[v100[6 -4 ]]= #v98[v100[2 + 1 ]];elseif (v101==58) then v92=v100[3];else v98[v100[3 -1 ]]=v98[v100[3]];end elseif (v101<=60) then local v190=v100[2];v98[v190]=v98[v190](v21(v98,v190 + 1 ,v100[3]));elseif (v101==61) then v98[v100[2]]=v75[v100[3]];else v98[v100[2]]=v98[v100[3]]%v98[v100[4]] ;end elseif (v101<=73) then if (v101<=67) then if (v101<=64) then if (v101>63) then do return;end else local v192=0;local v193;while true do if (0==v192) then v193=v100[2];do return v98[v193](v21(v98,v193 + (439 -(145 + 293)) ,v100[3]));end break;end end end elseif (v101<=65) then local v194=v100[2];local v195,v196=v91(v98[v194](v21(v98,v194 + 1 ,v93)));v93=(v196 + v194) -1 ;local v197=430 -(44 + 386) ;for v212=v194,v93 do local v213=0;while true do if (v213==0) then v197=v197 + 1 ;v98[v212]=v195[v197];break;end end end elseif (v101>66) then local v276=v100[2];v98[v276](v21(v98,v276 + (1487 -(998 + 488)) ,v93));else local v277=v100[2];do return v21(v98,v277,v93);end end elseif (v101<=70) then if (v101<=68) then v98[v100[1 + 1 ]]();elseif (v101>(57 + 12)) then local v278=0;local v279;local v280;while true do if (v278==1) then for v389=v279 + (773 -(201 + 571)) ,v93 do v15(v280,v98[v389]);end break;end if (v278==0) then v279=v100[2];v280=v98[v279];v278=1;end end else local v281=v100[2];local v282=v98[v100[3]];v98[v281 + (1139 -(116 + 1022)) ]=v282;v98[v281]=v282[v100[4]];end elseif (v101<=71) then v98[v100[2]]=v98[v100[3]] + v100[4] ;elseif (v101==72) then local v286=0;local v287;while true do if (v286==0) then v287=v100[2];v98[v287](v21(v98,v287 + 1 ,v100[12 -9 ]));break;end end else local v288=0;local v289;while true do if (0==v288) then v289=v100[2];v98[v289](v21(v98,v289 + 1 ,v100[3]));break;end end end elseif (v101<=78) then if (v101<=75) then if (v101>(44 + 30)) then if  not v98[v100[2]] then v92=v92 + 1 ;else v92=v100[3];end else local v199=0;local v200;local v201;local v202;while true do if (v199==2) then for v344=1,v100[4] do v92=v92 + 1 ;local v345=v88[v92];if (v345[1]==49) then v202[v344-1 ]={v98,v345[3]};else v202[v344-1 ]={v74,v345[3]};end v97[ #v97 + 1 ]=v202;end v98[v100[2]]=v40(v200,v201,v75);break;end if (v199==1) then v202={};v201=v18({},{[v7("\40\14\161\64\19\52\176","\46\119\81\200")]=function(v347,v348) local v349=0;local v350;while true do if (v349==0) then v350=v202[v348];return v350[1][v350[2]];end end end,[v7("\122\243\56\46\155\185\75\200\51\51","\208\37\172\86\75\236")]=function(v351,v352,v353) local v354=v202[v352];v354[1][v354[2]]=v353;end});v199=2;end if (v199==0) then v200=v89[v100[3]];v201=nil;v199=1;end end end elseif (v101<=(935 -(814 + 45))) then v98[v100[2]]=v75[v100[7 -4 ]];elseif (v101==77) then local v291=0;local v292;local v293;local v294;while true do if (1==v291) then v294={};v293=v18({},{[v7("\150\130\230\133\168\172\165","\204\201\221\143\235")]=function(v392,v393) local v394=0;local v395;while true do if (v394==0) then v395=v294[v393];return v395[1 + 0 ][v395[2]];end end end,[v7("\72\186\240\68\96\140\240\69\114\157","\33\23\229\158")]=function(v396,v397,v398) local v399=0;local v400;while true do if (v399==0) then v400=v294[v397];v400[1][v400[2]]=v398;break;end end end});v291=2;end if (v291==0) then v292=v89[v100[3]];v293=nil;v291=1;end if (v291==2) then for v401=1,v100[4] do v92=v92 + 1 ;local v402=v88[v92];if (v402[1]==49) then v294[v401-1 ]={v98,v402[2 + 1 ]};else v294[v401-1 ]={v74,v402[3]};end v97[ #v97 + 1 ]=v294;end v98[v100[2]]=v40(v292,v293,v75);break;end end else local v295=v100[2];v98[v295]=v98[v295](v21(v98,v295 + 1 ,v100[3]));end elseif (v101<=81) then if (v101<=79) then if (v98[v100[2]]==v100[4]) then v92=v92 + 1 ;else v92=v100[3];end elseif (v101>80) then v98[v100[2]][v98[v100[3]]]=v98[v100[4]];else v98[v100[2]][v98[v100[3]]]=v98[v100[4]];end elseif (v101<=82) then v98[v100[2]]=v98[v100[3]]%v100[4] ;elseif (v101==83) then for v333=v100[2],v100[3] do v98[v333]=nil;end else v98[v100[2]]=v100[3];end v92=v92 + (886 -(261 + 624)) ;end end;end return v40(v39(),{},v28)(...);end return vv17(),...);
